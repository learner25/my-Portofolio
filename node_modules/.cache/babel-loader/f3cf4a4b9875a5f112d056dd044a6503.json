{"ast":null,"code":"import _slicedToArray from\"/Users/Admin/Downloads/the-substance-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{WebGLRenderTarget,Object3D}from\"three\";import React,{useRef,useMemo}from\"react\";import{useLoader,useThree,useFrame}from\"react-three-fiber\";import{GLTFLoader}from\"three/examples/jsm/loaders/GLTFLoader\";import lerp from\"lerp\";import BackfaceMaterial from\"./BackfaceMaterial\";import RefractionMaterial from\"./RefractionMaterial\";import{useBlock}from\"../blocks\";import state from\"../store\";var dummy=new Object3D();export default function Diamonds(){var gltf=useLoader(GLTFLoader,\"./diamond.glb\");//useMemo(() => gltf.scene.children[0].geometry.center(), [])\nvar _useThree=useThree(),size=_useThree.size,gl=_useThree.gl,scene=_useThree.scene,camera=_useThree.camera,clock=_useThree.clock;var _useBlock=useBlock(),contentMaxWidth=_useBlock.contentMaxWidth,sectionHeight=_useBlock.sectionHeight,mobile=_useBlock.mobile;var model=useRef();var ratio=gl.getPixelRatio();var _useMemo=useMemo(function(){var envFbo=new WebGLRenderTarget(size.width*ratio,size.height*ratio);var backfaceFbo=new WebGLRenderTarget(size.width*ratio,size.height*ratio);var backfaceMaterial=new BackfaceMaterial();var refractionMaterial=new RefractionMaterial({envMap:envFbo.texture,backfaceMap:backfaceFbo.texture,resolution:[size.width*ratio,size.height*ratio]});return[envFbo,backfaceFbo,backfaceMaterial,refractionMaterial];},[size,ratio]),_useMemo2=_slicedToArray(_useMemo,4),envFbo=_useMemo2[0],backfaceFbo=_useMemo2[1],backfaceMaterial=_useMemo2[2],refractionMaterial=_useMemo2[3];useFrame(function(){state.diamonds.forEach(function(data,i){var t=clock.getElapsedTime()/2;var x=data.x,offset=data.offset,scale=data.scale,factor=data.factor;var s=contentMaxWidth/35*scale;data.pos.set(mobile?0:x,lerp(data.pos.y,-sectionHeight*offset*factor+state.top.current/state.zoom*factor,0.1),0);dummy.position.copy(data.pos);if(i===state.diamonds.length-1)dummy.rotation.set(0,t,0);else dummy.rotation.set(t,t,t);dummy.scale.set(s,s,s);dummy.updateMatrix();model.current.setMatrixAt(i,dummy.matrix);model.current.instanceMatrix.needsUpdate=true;});gl.autoClear=false;camera.layers.set(0);gl.setRenderTarget(envFbo);gl.clearColor();gl.render(scene,camera);gl.clearDepth();camera.layers.set(1);model.current.material=backfaceMaterial;gl.setRenderTarget(backfaceFbo);gl.clearDepth();gl.render(scene,camera);camera.layers.set(0);gl.setRenderTarget(null);gl.render(scene,camera);gl.clearDepth();camera.layers.set(1);model.current.material=refractionMaterial;gl.render(scene,camera);},1);return/*#__PURE__*/React.createElement(\"instancedMesh\",{ref:model,layers:1,args:[null,null,state.diamonds.length],position:[0,0,50]},/*#__PURE__*/React.createElement(\"bufferGeometry\",Object.assign({attach:\"geometry\"},gltf.__$[1].geometry)));}","map":{"version":3,"sources":["/Users/Admin/Downloads/the-substance-master/src/diamonds/Diamonds.js"],"names":["WebGLRenderTarget","Object3D","React","useRef","useMemo","useLoader","useThree","useFrame","GLTFLoader","lerp","BackfaceMaterial","RefractionMaterial","useBlock","state","dummy","Diamonds","gltf","size","gl","scene","camera","clock","contentMaxWidth","sectionHeight","mobile","model","ratio","getPixelRatio","envFbo","width","height","backfaceFbo","backfaceMaterial","refractionMaterial","envMap","texture","backfaceMap","resolution","diamonds","forEach","data","i","t","getElapsedTime","x","offset","scale","factor","s","pos","set","y","top","current","zoom","position","copy","length","rotation","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","autoClear","layers","setRenderTarget","clearColor","render","clearDepth","material","__$","geometry"],"mappings":"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","sourcesContent":["import { WebGLRenderTarget, Object3D } from \"three\"\nimport React, { useRef, useMemo } from \"react\"\nimport { useLoader, useThree, useFrame } from \"react-three-fiber\"\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\nimport lerp from \"lerp\"\nimport BackfaceMaterial from \"./BackfaceMaterial\"\nimport RefractionMaterial from \"./RefractionMaterial\"\nimport { useBlock } from \"../blocks\"\nimport state from \"../store\"\n\nconst dummy = new Object3D()\nexport default function Diamonds() {\n  const gltf = useLoader(GLTFLoader, \"./diamond.glb\")\n  //useMemo(() => gltf.scene.children[0].geometry.center(), [])\n\n  const { size, gl, scene, camera, clock } = useThree()\n  const { contentMaxWidth, sectionHeight, mobile } = useBlock()\n  const model = useRef()\n  const ratio = gl.getPixelRatio()\n\n  const [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial] = useMemo(() => {\n    const envFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\n    const backfaceFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\n    const backfaceMaterial = new BackfaceMaterial()\n    const refractionMaterial = new RefractionMaterial({\n      envMap: envFbo.texture,\n      backfaceMap: backfaceFbo.texture,\n      resolution: [size.width * ratio, size.height * ratio]\n    })\n    return [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial]\n  }, [size, ratio])\n\n  useFrame(() => {\n    state.diamonds.forEach((data, i) => {\n      const t = clock.getElapsedTime() / 2\n      const { x, offset, scale, factor } = data\n      const s = (contentMaxWidth / 35) * scale\n      data.pos.set(mobile ? 0 : x, lerp(data.pos.y, -sectionHeight * offset * factor + (state.top.current / state.zoom) * factor, 0.1), 0)\n      dummy.position.copy(data.pos)\n      if (i === state.diamonds.length - 1) dummy.rotation.set(0, t, 0)\n      else dummy.rotation.set(t, t, t)\n      dummy.scale.set(s, s, s)\n      dummy.updateMatrix()\n      model.current.setMatrixAt(i, dummy.matrix)\n      model.current.instanceMatrix.needsUpdate = true\n    })\n\n    gl.autoClear = false\n    camera.layers.set(0)\n    gl.setRenderTarget(envFbo)\n    gl.clearColor()\n    gl.render(scene, camera)\n    gl.clearDepth()\n    camera.layers.set(1)\n    model.current.material = backfaceMaterial\n    gl.setRenderTarget(backfaceFbo)\n    gl.clearDepth()\n    gl.render(scene, camera)\n    camera.layers.set(0)\n    gl.setRenderTarget(null)\n    gl.render(scene, camera)\n    gl.clearDepth()\n    camera.layers.set(1)\n    model.current.material = refractionMaterial\n    gl.render(scene, camera)\n  }, 1)\n\n  return (\n    <instancedMesh ref={model} layers={1} args={[null, null, state.diamonds.length]} position={[0, 0, 50]}>\n      <bufferGeometry attach=\"geometry\" {...gltf.__$[1].geometry} />\n    </instancedMesh>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}