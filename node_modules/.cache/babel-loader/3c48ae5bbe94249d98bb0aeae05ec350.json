{"ast":null,"code":"import _classCallCheck from \"/Users/Admin/Downloads/the-substance-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/Admin/Downloads/the-substance-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/Admin/Downloads/the-substance-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { ShaderMaterial, BackSide } from \"three\";\n\nvar BackfaceMaterial = /*#__PURE__*/function (_ShaderMaterial) {\n  _inherits(BackfaceMaterial, _ShaderMaterial);\n\n  var _super = _createSuper(BackfaceMaterial);\n\n  function BackfaceMaterial() {\n    _classCallCheck(this, BackfaceMaterial);\n\n    return _super.call(this, {\n      vertexShader: \"varying vec3 worldNormal;\\n      void main() {\\n        vec4 transformedNormal = vec4(normal, 0.);\\n        vec4 transformedPosition = vec4(position, 1.0);\\n        #ifdef USE_INSTANCING\\n          transformedNormal = instanceMatrix * transformedNormal;\\n          transformedPosition = instanceMatrix * transformedPosition;\\n        #endif\\n        worldNormal = normalize(modelViewMatrix * transformedNormal).xyz;\\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\\n      }\",\n      fragmentShader: \"varying vec3 worldNormal;\\n      void main() {\\n        gl_FragColor = vec4(worldNormal, 1.0);\\n      }\",\n      side: BackSide\n    });\n  }\n\n  return BackfaceMaterial;\n}(ShaderMaterial);\n\nexport { BackfaceMaterial as default };","map":{"version":3,"sources":["/Users/Admin/Downloads/the-substance-master/src/diamonds/BackfaceMaterial.js"],"names":["ShaderMaterial","BackSide","BackfaceMaterial","vertexShader","fragmentShader","side"],"mappings":";;;AAAA,SAASA,cAAT,EAAyBC,QAAzB,QAAyC,OAAzC;;IAEqBC,gB;;;;;AACnB,8BAAc;AAAA;;AAAA,6BACN;AACJC,MAAAA,YAAY,6fADR;AAYJC,MAAAA,cAAc,2GAZV;AAgBJC,MAAAA,IAAI,EAAEJ;AAhBF,KADM;AAmBb;;;EApB2CD,c;;SAAzBE,gB","sourcesContent":["import { ShaderMaterial, BackSide } from \"three\"\n\nexport default class BackfaceMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      vertexShader: `varying vec3 worldNormal;\n      void main() {\n        vec4 transformedNormal = vec4(normal, 0.);\n        vec4 transformedPosition = vec4(position, 1.0);\n        #ifdef USE_INSTANCING\n          transformedNormal = instanceMatrix * transformedNormal;\n          transformedPosition = instanceMatrix * transformedPosition;\n        #endif\n        worldNormal = normalize(modelViewMatrix * transformedNormal).xyz;\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\n      }`,\n      fragmentShader: `varying vec3 worldNormal;\n      void main() {\n        gl_FragColor = vec4(worldNormal, 1.0);\n      }`,\n      side: BackSide\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}