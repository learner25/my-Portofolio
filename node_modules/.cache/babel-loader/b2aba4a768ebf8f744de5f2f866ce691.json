{"ast":null,"code":"import _objectWithoutProperties from\"/Users/Admin/Downloads/the-substance-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{createContext,useRef,useContext}from\"react\";import{useFrame,useThree}from\"react-three-fiber\";import lerp from\"lerp\";import state from\"./store\";var offsetContext=createContext(0);function Block(_ref){var children=_ref.children,offset=_ref.offset,factor=_ref.factor,props=_objectWithoutProperties(_ref,[\"children\",\"offset\",\"factor\"]);var _useBlock=useBlock(),parentOffset=_useBlock.offset,sectionHeight=_useBlock.sectionHeight;var ref=useRef();offset=offset!==undefined?offset:parentOffset;useFrame(function(){var curY=ref.current.position.y;var curTop=state.top.current;ref.current.position.y=lerp(curY,curTop/state.zoom*factor,0.1);});return/*#__PURE__*/React.createElement(offsetContext.Provider,{value:offset},/*#__PURE__*/React.createElement(\"group\",Object.assign({},props,{position:[0,-sectionHeight*offset*factor,0]}),/*#__PURE__*/React.createElement(\"group\",{ref:ref},children)));}function useBlock(){var sections=state.sections,pages=state.pages,zoom=state.zoom;var _useThree=useThree(),size=_useThree.size,viewport=_useThree.viewport;var offset=useContext(offsetContext);var viewportWidth=viewport.width;var viewportHeight=viewport.height;var canvasWidth=viewportWidth/zoom;var canvasHeight=viewportHeight/zoom;var mobile=size.width<700;var margin=canvasWidth*(mobile?0.2:0.1);var contentMaxWidth=canvasWidth*(mobile?0.8:0.6);var sectionHeight=canvasHeight*((pages-1)/(sections-1));var offsetFactor=(offset+1.0)/sections;return{viewport,offset,viewportWidth,viewportHeight,canvasWidth,canvasHeight,mobile,margin,contentMaxWidth,sectionHeight,offsetFactor};}export{Block,useBlock};","map":{"version":3,"sources":["/Users/Admin/Downloads/the-substance-master/src/blocks.js"],"names":["React","createContext","useRef","useContext","useFrame","useThree","lerp","state","offsetContext","Block","children","offset","factor","props","useBlock","parentOffset","sectionHeight","ref","undefined","curY","current","position","y","curTop","top","zoom","sections","pages","size","viewport","viewportWidth","width","viewportHeight","height","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","offsetFactor"],"mappings":"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","sourcesContent":["import React, { createContext, useRef, useContext } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\nimport lerp from \"lerp\"\nimport state from \"./store\"\n\nconst offsetContext = createContext(0)\n\nfunction Block({ children, offset, factor, ...props }) {\n  const { offset: parentOffset, sectionHeight } = useBlock()\n  const ref = useRef()\n  offset = offset !== undefined ? offset : parentOffset\n  useFrame(() => {\n    const curY = ref.current.position.y\n    const curTop = state.top.current\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1)\n  })\n  return (\n    <offsetContext.Provider value={offset}>\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\n        <group ref={ref}>{children}</group>\n      </group>\n    </offsetContext.Provider>\n  )\n}\n\nfunction useBlock() {\n  const { sections, pages, zoom } = state\n  const { size, viewport } = useThree()\n  const offset = useContext(offsetContext)\n  const viewportWidth = viewport.width\n  const viewportHeight = viewport.height\n  const canvasWidth = viewportWidth / zoom\n  const canvasHeight = viewportHeight / zoom\n  const mobile = size.width < 700\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1)\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6)\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1))\n  const offsetFactor = (offset + 1.0) / sections\n  return {\n    viewport,\n    offset,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    mobile,\n    margin,\n    contentMaxWidth,\n    sectionHeight,\n    offsetFactor\n  }\n}\n\nexport { Block, useBlock }\n"]},"metadata":{},"sourceType":"module"}